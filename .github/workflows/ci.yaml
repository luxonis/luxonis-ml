name: CI

on:
  pull_request:
    branches: [ dev, main ]
    paths:
      - 'luxonis_ml/**'
      - 'tests/**'
      - .github/workflows/ci.yaml

permissions:
  pull-requests: write
  contents: write
  checks: write

jobs:
  assigner:
    runs-on: ubuntu-latest
    steps:
      - name: Auto-assign
        uses: toshimaru/auto-author-assign@v2.1.1

  labeler:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Labeler
        uses: actions/labeler@v5
        with:
          configuration-path: .github/labeler.yaml

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}

    - name: Run pre-commit
      uses: pre-commit/action@v3.0.1

  docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Install dependencies
        run: |
          pip install pydoctor
          curl -L "https://raw.githubusercontent.com/luxonis/python-api-analyzer-to-json/main/gen-docs.py" -o "gen-docs.py"

      - name: Build docs
        run: |
          python gen-docs.py luxonis_ml

  tests:
    needs:
      - pre-commit
      - docs
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.10']

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.head_ref }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip

    - name: Install package
      run: pip install -e .[dev]

    - name: Authenticate to Google Cloud
      id: google-auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        create_credentials_file: true
        export_environment_variables: true
        token_format: access_token

    - name: Run pytest
      uses: pavelzw/pytest-action@v2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_S3_ENDPOINT_URL: ${{ secrets.AWS_S3_ENDPOINT_URL }}
        LUXONISML_BUCKET: luxonis-test-bucket
      with:
        emoji: false
        custom-arguments: >
          --cov --junitxml=junit.xml -o junit_family=legacy

    - name: Upload test results to Codecov
      if: >
        ${{ !cancelled() }}
        && matrix.os == 'ubuntu-latest'
        && matrix.python-version == '3.8'

      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload results to Codecov
      uses: codecov/codecov-action@v4
      if: >
        ${{ !cancelled() }}
        && matrix.os == 'ubuntu-latest'
        && matrix.python-version == '3.8'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
