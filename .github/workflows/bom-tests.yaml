name: Compatibility BOM Tests

on:
  workflow_dispatch:
    inputs:
      ml_ref:
        description: 'luxonis-ml version (branch/tag/SHA)'
        required: true
        type: string
        default: main
      train_ref:
        description: 'luxonis-train version (branch/tag/SHA)'
        required: true
        type: string
        default: main
      modelconv_ref:
        description: 'modelconverter version (branch/tag/SHA)'
        required: true
        type: string
        default: main
      tools_ref:
        description: 'luxonis-tools version (branch/tag/SHA)'
        required: true
        type: string
        default: main
      datadreamer_ref:
        description: 'datadreamer version (branch/tag/SHA)'
        required: true
        type: string
        default: main
      run_train:
        description: 'Run Luxonis Train tests'
        required: false
        type: boolean
        default: true
      run_modelconv:
        description: 'Run Modelconverter tests'
        required: false
        type: boolean
        default: true
      run_tools:
        description: 'Run Luxonis Tools tests'
        required: false
        type: boolean
        default: true
      run_datadreamer:
        description: 'Run Datadreamer tests'
        required: false
        type: boolean
        default: true

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  test-luxonis-train:
    name: Test Luxonis Train
    if: >-
      (github.event_name == 'workflow_dispatch' && inputs.run_train) ||
      (github.event_name == 'pull_request' &&
       startsWith(github.head_ref, 'release/') &&
       github.event.pull_request.base.ref == 'main')
    uses: Luxonis/luxonis-train/.github/workflows/tests.yaml@fix/fix/cli-tests
    with:
      ml_ref:    ${{ github.event_name == 'workflow_dispatch' && inputs.ml_ref   || github.head_ref }}
      train_ref: ${{ github.event_name == 'workflow_dispatch' && inputs.train_ref || 'main' }}
    secrets:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
      CODECOV_TOKEN:                  ${{ secrets.CODECOV_TOKEN }}

  test-modelconverter:
    name: Test Modelconverter
    if: >-
      (github.event_name == 'workflow_dispatch' && inputs.run_modelconv) ||
      (github.event_name == 'pull_request' &&
       startsWith(github.head_ref, 'release/') &&
       github.event.pull_request.base.ref == 'main')
    uses: Luxonis/modelconverter/.github/workflows/unittests.yaml@main
    with:
      ml_ref:        ${{ github.event_name == 'workflow_dispatch' && inputs.ml_ref        || github.head_ref }}
      modelconv_ref: ${{ github.event_name == 'workflow_dispatch' && inputs.modelconv_ref || 'main' }}
    secrets:
      AWS_ACCESS_KEY_ID:     ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_ENDPOINT_URL:   ${{ secrets.AWS_S3_ENDPOINT_URL }}
      GCP_CREDENTIALS:       ${{ secrets.GCP_CREDENTIALS }}
      HUBAI_API_KEY:         ${{ secrets.HUBAI_API_KEY }}

  test-luxonis-tools:
    name: Test Luxonis Tools
    if: >-
      (github.event_name == 'workflow_dispatch' && inputs.run_tools) ||
      (github.event_name == 'pull_request' &&
       startsWith(github.head_ref, 'release/') &&
       github.event.pull_request.base.ref == 'main')
    uses: Luxonis/tools/.github/workflows/unittests.yaml@main
    with:
      ml_ref:    ${{ github.event_name == 'workflow_dispatch' && inputs.ml_ref   || github.head_ref }}
      tools_ref: ${{ github.event_name == 'workflow_dispatch' && inputs.tools_ref || 'main' }}

  test-datadreamer:
    name: Test Datadreamer
    if: >-
      (github.event_name == 'workflow_dispatch' && inputs.run_datadreamer) ||
      (github.event_name == 'pull_request' &&
       startsWith(github.head_ref, 'release/') &&
       github.event.pull_request.base.ref == 'main')
    uses: Luxonis/datadreamer/.github/workflows/unit-tests.yaml@main
    with:
      ml_ref:           ${{ github.event_name == 'workflow_dispatch' && inputs.ml_ref           || github.head_ref }}
      datadreamer_ref:  ${{ github.event_name == 'workflow_dispatch' && inputs.datadreamer_ref || 'main' }}
